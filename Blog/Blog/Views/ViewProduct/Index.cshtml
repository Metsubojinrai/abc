@model List<Blog.Models.Product>
@{
    ViewData["Title"] = "Các sản phẩm";
    Layout = "/Views/ViewProduct/_Layout.cshtml";
    Category cate = ViewBag.CurrentCategory;
}

@if (cate != null)
{
    <h2>@cate.Name</h2>
}
<form asp-route="products">
    Find by name: @Html.TextBox("searchString")
    <input type="submit" value="Search" />
    Sort By: @Html.DropDownList("sortOrder",ViewBag.SortOrders,"--Select Sort--" ,new { @class = "w-20", id = "selectedSort" })
    <input type="submit" value="Sort" />
</form>
<hr />
<div class="card-columns">
    @foreach (var product in Model)
    {
        <div class="card">
            <h4 class="card-header">@product.Name</h4>
            <div class="card-body" style="height: 150px;">
                <img id="ProductPicture" style="width:150px;height:100px;object-fit:scale-down"
                     src="~/File/Image/Product/@product.ProductPicture" />
            </div>
            <div class="card-footer">
                <span class="text-muted">@product.Price.ToString("n0") VND</span>
                <a asp-route="addcart" asp-route-productid="@product.ProductId"
                   class="btn btn-secondary btn-sm float-right">Đặt hàng</a>
            </div>
        </div>
    }
</div>

@section Sidebar {
    @{
        @await Component.InvokeAsync(CategorySidebar.COMPONENTNAME,
            new CategorySidebar.CategorySidebarData()
            {
                categories = ViewBag.categories,
                productCategory = ViewBag.productCategory
            })
    }
}

@{

    Func<int?, string> generateUrl = (int? _pagenumber) =>
    {
        if (_pagenumber == 1) _pagenumber = null;
        return Url.Link("listproduct", new { page = _pagenumber, category = ViewBag.productCategory });
    };

    var datapaging = new
    {
        currentPage = ViewBag.pageNumber,
        countPages = ViewBag.totalPages,
        generateUrl = generateUrl
    };

}
<partial name="_Paging" model="@datapaging" />